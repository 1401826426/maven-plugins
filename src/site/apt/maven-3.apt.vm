 ------
 Maven Site Plugin with Maven 3.x
 ------
 Olivier Lamy
 ------
 2011-07-05
 ------

 ~~ Licensed to the Apache Software Foundation (ASF) under one
 ~~ or more contributor license agreements.  See the NOTICE file
 ~~ distributed with this work for additional information
 ~~ regarding copyright ownership.  The ASF licenses this file
 ~~ to you under the Apache License, Version 2.0 (the
 ~~ "License"); you may not use this file except in compliance
 ~~ with the License.  You may obtain a copy of the License at
 ~~
 ~~   http://www.apache.org/licenses/LICENSE-2.0
 ~~
 ~~ Unless required by applicable law or agreed to in writing,
 ~~ software distributed under the License is distributed on an
 ~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~~ KIND, either express or implied.  See the License for the
 ~~ specific language governing permissions and limitations
 ~~ under the License.

 ~~ NOTE: For help with the syntax of this file, see:
 ~~ http://maven.apache.org/doxia/references/apt-format.html


Maven Site Plugin with Maven 3.x

  A major aim of the refactoring in Maven 3.x was to decouple the Maven core from Doxia
  and to allow arbitrary reporting systems to be developed. For this reason, all reporting
  related code has been removed from the core of Maven 3
  ({{{http://jira.codehaus.org/browse/MNG-4162}MNG-4162}}).
  As a result, the 2.x versions of the Maven Site Plugin will no longer work with Maven 3.
  Using previous versions of maven-site-plugin with Maven 3.x won't generate reports from any report plugin,
  only hand-written Doxia documents (apt, xdoc, ...) will be rendered.

  Therefore this
  <<<{{{https://svn.apache.org/repos/asf/maven/plugins/branches/maven-site-plugin-3.x/}3.x branch}}>>>
  of the Site Plugin has been created, in order to get the Site Plugin working with Maven 3.x.

* Plugins Compatibility Matrix

** Plugins Maintained by the Apache Maven Community

  Tests have been made on the reporting profile of the Maven parent POM which enables some reports.
  You will need so update some of those plugins for them to work with Maven 3.x. Below you will find the minimum version
  required for these plugins to work in Maven 3.

*-----------------------------------+-----------+
| <<Plugin>>                        |<<Version>>|
*-----------------------------------+-----------+
| maven-javadoc-plugin              | 2.6.1     |
*-----------------------------------+-----------+
| maven-project-info-reports-plugin | 2.2       |
*-----------------------------------+-----------+
| surefire-report                   | 2.4.3     |
*-----------------------------------+-----------+
| jxr                               | 2.1       |
*-----------------------------------+-----------+
| maven-changelog-plugin            | 2.1       |
*-----------------------------------+-----------+
| maven-changes-plugin              | 2.1       |
*-----------------------------------+-----------+
| maven-checkstyle-plugin           | 2.5       |
*-----------------------------------+-----------+
| maven-plugin-plugin               | 2.5.1     |
*-----------------------------------+-----------+
| maven-pmd-plugin                  | 2.4       |
*-----------------------------------+-----------+

** Plugins Maintained by the Mojo Community

*----------------------------------+-----------+
| <<Plugin>>                       |<<Version>>|
*----------------------------------+-----------+
| cobertura-maven-plugin           | 2.3       |
*----------------------------------+-----------+
| emma-maven-plugin                | 1.0-alpha-2 |
*----------------------------------+-----------+


* Configuration formats

  The <<<\<reporting\>>>> section of the POM has been moved to the Site Plugin's configuration for Maven 3.
  The content of the configuration has been kept as similar as possible to Maven 2.
  The <<<{{{/shared/maven-reporting-exec/}maven-reporting-exec}}>>> component transforms the configuration on the fly.

** Old configuration (Maven 2 & 3)

  Reports are configured in the <<<\<reporting\>>>> section of the POM.

+-----+
  <reporting>
    <excludeDefaults>true</excludeDefaults>
    <outputDirectory></outputDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependencies</report>
              <report>scm</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.8</version>
      </plugin>
    </plugins>
  </reporting>
+-----+

** New Configuration (Maven 3 only, no reports configuration inheritance)

  Reports can be configured in the configuration for <<<maven-site-plugin>>> too as <<<\<reportPlugins\>>>> elements.

+-----+
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>${project.version}</version>
        <configuration>
          ...
          <reportPlugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              <version>2.4</version>
              <configuration>
                <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
              </configuration>
              <!-- simpler configuration without reportSets available for usual cases -->
              <reports>
                <report>dependencies</report>
                <report>scm</report>
              </reports>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-javadoc-plugin</artifactId>
              <version>2.8</version>
            </plugin>
          </reportPlugins>
        </configuration>
      </plugin>
    </plugins>
  </build>
+-----+

  Notice that as of Maven 3.0.x, the new format does not support report plugins configuration inheritance: see
  {{{http://jira.codehaus.org/browse/MSITE-484}MSITE-484}}. This format was technically necessary to remove reporting logic
  from Maven 3, but a new inheritance mecanism still needs to be added to Maven to make it as flexible as old format.
  Then the new format is not ready for direct use for now.

* Version Resolution

  When used with Maven 3, a report plugin version can be empty.
  The following order/strategy will be used to find/resolve a version:

  * search same groupId/artifactId in the build.plugins section

  * search same groupId/artifactId in the build.pluginManagement.plugins section

  * resolve with current repositories (can include auto SNAPSHOT resolution)

* Site descriptor attachment

  In Maven 3, the default execution of <<<site:attach-descriptor>>> has been removed from the
  built-in lifecycle bindings for projects with packaging "pom". Users that actually use those
  projects to provide a common site descriptor for sub modules will need to explicitly define
  the following goal execution to restore the intended behavior:

+-----+
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-descriptor</id>
            <goals>
              <goal>attach-descriptor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
+-----+

* Using one version of maven-site-plugin for both Maven 2.2.x and Maven 3.x

  Starting with maven-site-plugin 3.0, the plugin can run with both Maven 2.2.x and 3.x. The
  results should be exactly the same if reports are configured in the old Maven 2 way, in the <<<\<reporting\>>>>
  section. If you use the new Maven 3 way of configuring reports, in the <<<\<reportPlugins\>>>> section, it will only
  work with Maven 3.

  The following snipped automatically activates <<<site:attach-descriptor>>> when run with Maven 3.x:

+-----+
  <profiles>
    <profile>
      <id>maven-3</id>
      <activation>
        <file>
          <!--  This employs that the basedir expression is only recognized by Maven 3.x (see MNG-2363) -->
          <exists>${basedir}</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-site-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-descriptor</id>
                <goals>
                  <goal>attach-descriptor</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
+-----+

 Notice: the profile is needed to avoid duplicate install and deploy under Maven 2.2 due to pom default lifecycle mapping

* Using maven-site-plugin 2.x with Maven 2.x and maven-site-plugin 3.x with Maven 3.x

  Before maven-site-plugin 3.0-beta-4, maven-site-plugin 2.x was compatible only with Maven 2 and maven-site-plugin
  3.x was compatible only with Maven 3. A trick was needed to let Maven 2 use one version of the plugin and Maven 3
  another version with the same <<<pom.xml>>>.

  The following snipped automatically activates maven-site-plugin 3.x when run with Maven 3.x:

+-----+
  <profiles>
    <profile>
      <id>maven-3</id>
      <activation>
        <file>
          <!--  This employs that the basedir expression is only recognized by Maven 3.x (see MNG-2363) -->
          <exists>${basedir}</exists>
        </file>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-site-plugin</artifactId>
              <version>${project.version}</version>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <artifactId>maven-site-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-descriptor</id>
                <goals>
                  <goal>attach-descriptor</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
+-----+

  <<Note:>> Be aware that you should also use <<<\<pluginManagement\>>>> for the maven-site-plugin 2.x to specify the
  version. If you define the plugin version directly inside the <<<\<plugins\>>>> section of the <<<\<build\>>>> element
  then that version is always used, no matter the Maven version. That snippet would look like this:

+-----+
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>2.3</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
+-----+
